#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç ClickHouse –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
"""
import sys
import os
import asyncio
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

load_dotenv()

async def test_clickhouse_service():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º ClickHouse —Å–µ—Ä–≤–∏—Å"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º ClickHouse —Å–µ—Ä–≤–∏—Å...")
    
    try:
        from app.services.clickhouse_service import ClickHouseService
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
        service = ClickHouseService()
        
        if not service.client:
            print("‚ùå ClickHouse client –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return False
        
        print("‚úÖ ClickHouse —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        await service.test_connection()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
        await service.create_tables()
        print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
        result = await service.execute_query("SHOW TABLES FROM jonquils_analytics")
        print(f"üìä –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {result}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å—Ç–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö
        success = await service.insert_simple_listening_event(
            user_id=1,
            track_id=1,
            played_duration=180,
            device_type='web',
            country='Russia'
        )
        
        if success:
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤—Å—Ç–∞–≤–ª–µ–Ω—ã!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        count_result = await service.execute_query("SELECT COUNT(*) as count FROM jonquils_analytics.listening_events")
        print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ listening_events: {count_result}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
        analytics = await service.get_track_analytics(track_id=1, days=30)
        print(f"üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ç—Ä–µ–∫–∞: {analytics}")
        
        await service.close()
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    asyncio.run(test_clickhouse_service())
